# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]
    environment: release
    permissions: write-all
      # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
        architecture: x64
    - name: Set variables
      run: |
        VER=$(cat VERSION)
        echo "VERSION=$VER" >> $GITHUB_ENV
        HASH=$(git rev-parse --short "$GITHUB_SHA")
        echo "COMMIT_HASH=$HASH" >> $GITHUB_ENV
    - name: Setup setup.py
      run: |
        pip install -r requirements.txt
        python setup.py install
    - name: Lint with flake8
      run: |
        pip install flake8
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pip install pytest
        pytest clikan_test.py
    - name: Create dist
      run: |
        pip install setuptools wheel twine build
        python -m build 
    - name: Create tag
      uses: actions/github-script@v5
      with:
        github-token: ${{ github.token }}
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: "refs/tags/${{ env.VERSION }}.${{ env.COMMIT_HASH }}",
            sha: context.sha
          })
    - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1.8.14
    - name: Post to Mastodon
      uses: rzr/fediverse-action@master
      with:
        access-token: ${{ secrets.MASTODON_ACCESS_TOKEN }}
        message: "#clikan - new release: https://github.com/${{ github.repository }}/releases/tag/${{ env.VERSION }}.${{ env.COMMIT_HASH }} - get your personal CLI #kanban board!"
    
